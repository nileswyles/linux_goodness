#!/bin/perl

########
# USAGE cd / && <script_name> <ROOT_DIR_PATH> --COMMIT

my ($ROOT_DIR_PATH, $COMMIT) = @ARGV;

@GIT_MANAGED_FILES = split(/\n/, `git ls-tree --name-only -r --full-name HEAD $ROOT_DIR_PATH`);

foreach (@GIT_MANAGED_FILES) {
	print("/$_\n");
}

sub isFileManaged {
	my $file_path = shift;
	my $managed = 0;
	#print("PROCESSING FILE: $file_path\n");
	foreach (@GIT_MANAGED_FILES) {
		if ("/$_" eq "$file_path") { #print("FILE MANAGED: $file_path\n");
			$managed = 1;
		}
	}
	return $managed;
} 

# for each file
#	if not in git_managed_files... 
#		set group to user....
#	if directory recurse...
sub processDir {
	my ($parent, $file_list) = @_;
	#print("PARENT: $parent, FILE LIST: $file_list\n\n\n");
	
	# TODO:
	# ls separator == \n?
	my @files = split(/\n/, $file_list);
	foreach (@files) {
		my $file_path = "$parent/$_";
		if (!isFileManaged($file_path)) { #lmao
			my $ls_detailed = `ls -la $file_path 2> /dev/null`;
			if($ls_detailed =~ /(^total\s+\d+\n)?[a-zA-Z\x2d]+\s+[0-9]+\s+([a-zA-Z]+)\s+([a-zA-Z]+)/) {
				# if $1 defined then it's a directory...
				if ($2 ne $3) {
					print("$file_path ...... user: $2, group: $3 ---- new group: $2\n");
					if ($COMMIT eq "--commit") {
						my $cmd = "chgrp $2 $file_path";
						system($cmd);
					}
				}
			}
		}
		my $dir = `ls $file_path/ 2> /dev/null`;
		if (length($dir) > 0) { # isDirectory
			processDir($file_path, $dir)
		}
	}
}

if ($ROOT_DIR_PATH) {
	my $dir = `ls $ROOT_DIR_PATH/ 2> /dev/null`;
	if (length($dir) > 0) { # isDirectory
		processDir($ROOT_DIR_PATH, $dir);
	}
}
